Exercise 4: Write a program that prompts the user to enter two integer values. Store these values in int variables named val1 and val2. Write your program to determine the smallest, largest, sum, difference, product, and ratio of these values and report them to the user.
	int val1 = 0;
	int val2 = 0;
	cout << "Please enter two integer values separated by a space: ";
	cin >> val1 >> val2;
	if (!cin) error("something went bad with the read");
	cout << "values : " << val1 << " " << val2 << '\n';

	if (val1<val2) cout << val1 << " is smallest\n";
	if (val2<val1) cout << val2 << " is smallest\n";
	if (val1==val2) cout << val1 << " and " << val2 << " are equal\n"; // I "forgot" to ask for that possibility
  
  Exercies 6:
	cout << "sum : " << val1+val2 << '\n';
	cout << "product : " << val1*val2 << '\n';
	if (val2==0)
		cout << "good try! but I don't divide by zero\n";
	else
		cout << "ratio (val1/val2): " << val1/val2 << '\n';	// note that this is integer division so 5/2 is 2 (not 2.5)
Exercise 8: Write a program to test an integer value to determine if it is odd or even. As always, make sure your output is clear and complete. In other words, don't just output "yes" or "no". Your output should stand alone, like ``The value 4 is an even number.'' Hint: see the Remainder (modulo) operator in 2.4.
	int val = 0;
	cout << "Please enter an integer: ";
	cin >> val;;
	if (!cin) error("something went bad with the read");
	string res = "even";
	if (val%2) res = "odd";	// a number is even if it is 0 modulo 2 and odd otherwise

	cout << "The value " << val << " is an " << res << " number\n";

Exercise 9: Write a program that converts spelled out numbers such as "zero" and "two" into digits, such as 0 and 2. When the user inputs a number print out the corresponding digit. Do it for the values 0,1,2,3, and 4 and write out "not a number I know" if the user enters something that doesn't correspond, such as ``stupid computer!''
cout << "Please enter an integer as a text string: ";
	string s;
	while (cin>>s) {
		if (s =="zero")
				cout << s << " has the value 0\n";
		else if (s =="one")
				cout << s << " has the value 1\n";
		else if (s =="two")
				cout << s << " has the value 2\n";
		else if (s =="three")
				cout << s << " has the value 3\n";
		else if (s =="four")
				cout << s << " has the value 4\n";
		else
				cout << s << " does not have a numeric value I understand\n";
		cout << "Please enter another integer as a text string: ";
    
Exercise 10: Write a program that takes an operation followed by two operands and outputs the result. For example:
+ 100 3.14
* 4 5
Read the operation into a string called operation and use an if-statement to figure out which operation the user wants. For example, if (operation=="+"). Read the operands into variables of type double. Implement this for operations called +, -, *, /, plus, minus, mul, and div with their obvious meanings.
    
  string operation;
	double val1 = 0;	// first/leftmost operand
	double val2 = 0;	// second/rightmost operand
	cout << "Please enter an operation (+, -, *, /, plus, minus, mul, div) followed by two floating-point values separated by a space: ";
	
	while(cin >> operation >> val1 >> val2) {	// we do the following as long as we get "good" input
												// and then stop
												// loops will be explainied in detail in Chapter 4
		double res = 0;
		if (operation=="plus" || operation=="+") res = val1+val2;
		else if (operation=="minus" || operation=="-") res = val1-val2;
		else if (operation=="mul" || operation=="*") res = val1*val2;
		else if (operation=="div" || operation=="/") {
			if (val2==0) error("trying to divide by zero");
			res = val1/val2;
		}
		else error("sorry: bad operator: ",operation);

		cout << val1 << operation << val2 << " == " << res <<'\n';
		cout << "Please try again: ";
	}
	cout << "exit because of bad input\n";
